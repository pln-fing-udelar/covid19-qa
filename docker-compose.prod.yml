version: "3.8"
networks:
  proxy:

services:

  elasticsearch:
    restart: always

  qa:
    restart: always
    environment:
      - ANSWER_THREADS=8
      - BATCH_SIZE=672
      - FLASK_ENV=production

  db:
    restart: always

  api:
    restart: always

  traefik:
      container_name: traefik
      image: traefik:v2.0
      command:
          - "--api.dashboard=true"
          - "--providers.docker=true"
          - "--entryPoints.web.address=:80"
          - "--entryPoints.websecure.address=:443"
          - "--certificatesResolvers.le.acme.email=${TRAEFIK_EMAIL}"
          - "--certificatesResolvers.le.acme.storage=acme.json"
          - "--certificatesResolvers.le.acme.tlsChallenge=true"
          - "--certificatesResolvers.le.acme.httpChallenge=true"
          - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"
          - "--log.level=INFO"
      restart: always
      ports:
          - 80:80
          - 443:443
          - 8080:8080
      networks:
          - proxy
      volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ./acme.json:/acme.json
      labels:
          # Redirect all HTTP to HTTPS permanently
          - traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)
          - traefik.http.routers.http_catchall.entrypoints=web
          - traefik.http.routers.http_catchall.middlewares=https_redirect
          - traefik.http.middlewares.https_redirect.redirectscheme.scheme=https
          - traefik.http.middlewares.https_redirect.redirectscheme.permanent=true
          # Dashboard
          - traefik.http.routers.api.rule=Host(`proxy.${TRAEFIK_DOMAIN}`)
          - traefik.http.routers.api.service=api@internal
          - traefik.http.routers.api.tls=true
          - traefik.http.routers.api.tls.certresolver=le
